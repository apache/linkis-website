"use strict";(self.webpackChunklinkis_web_apache=self.webpackChunklinkis_web_apache||[]).push([[17471],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(t),g=o,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||l;return t?i.createElement(m,a(a({ref:n},c),{},{components:t})):i.createElement(m,a({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=g;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[d]="string"==typeof e?e:o,a[1]=r;for(var p=2;p<l;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7274:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var i=t(87462),o=(t(67294),t(3905));const l={title:"Installation Hive lineage",sidebar_position:1},a=void 0,r={unversionedId:"deployment/integrated/hive-lineage",id:"version-1.5.0/deployment/integrated/hive-lineage",title:"Installation Hive lineage",description:"This paper mainly introduces the 'Hive' engine blood collection scheme in 'Linkis'.",source:"@site/versioned_docs/version-1.5.0/deployment/integrated/hive-lineage.md",sourceDirName:"deployment/integrated",slug:"/deployment/integrated/hive-lineage",permalink:"/docs/latest/deployment/integrated/hive-lineage",draft:!1,editUrl:"https://github.com/apache/linkis-website/edit/dev/versioned_docs/version-1.5.0/deployment/integrated/hive-lineage.md",tags:[],version:"1.5.0",sidebarPosition:1,frontMatter:{title:"Installation Hive lineage",sidebar_position:1},sidebar:"version-1.5.0/tutorialSidebar",previous:{title:"Version Adaptation",permalink:"/docs/latest/deployment/version-adaptation"},next:{title:"Installation Spark lineage",permalink:"/docs/latest/deployment/integrated/spark-lineage"}},s={},p=[{value:"1. Introduction",id:"1-introduction",level:2},{value:"2. The Hive lineage collected into the log",id:"2-the-hive-lineage-collected-into-the-log",level:2},{value:"2.1 Modify <code>hive-site.xml</code>",id:"21-modify-hive-sitexml",level:3},{value:"2.2 Modify <code>hive-log4j2.properties</code>",id:"22-modify-hive-log4j2properties",level:3},{value:"2.3 Submit task",id:"23-submit-task",level:3},{value:"2.4 View logs",id:"24-view-logs",level:3}],c={toc:p},d="wrapper";function u(e){let{components:n,...l}=e;return(0,o.kt)(d,(0,i.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This paper mainly introduces the 'Hive' engine blood collection scheme in 'Linkis'."),(0,o.kt)("h2",{id:"1-introduction"},"1. Introduction"),(0,o.kt)("p",null,"Hive provides a built-in lineage hook called LineageLogger, which is used to capture and record lineage information generated during query execution. By using the LineageLogger hook, you can capture and log the input and output tables, as well as column-level lineage relationships for queries."),(0,o.kt)("h2",{id:"2-the-hive-lineage-collected-into-the-log"},"2. The Hive lineage collected into the log"),(0,o.kt)("h3",{id:"21-modify-hive-sitexml"},"2.1 Modify ",(0,o.kt)("inlineCode",{parentName:"h3"},"hive-site.xml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"vim $HIVE_HOME/conf/hive-site.xml\n\nAdd the following configuration\n<property>\n    <name>hive.exec.post.hooks</name>\n    <value>org.apache.hadoop.hive.ql.hooks.LineageLogger</value>\n</property>\n")),(0,o.kt)("h3",{id:"22-modify-hive-log4j2properties"},"2.2 Modify ",(0,o.kt)("inlineCode",{parentName:"h3"},"hive-log4j2.properties")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"vim $HIVE_HOME/conf/hive-log4j2.properties\n\nAdd the following configuration\nog4j.logger.org.apache.hadoop.hive.ql.hooks.LineageLogger=INFO\n")),(0,o.kt)("h3",{id:"23-submit-task"},"2.3 Submit task"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'sh ./bin/linkis-cli -engineType hive-3.1.3 \\\n-codeType hql -code  \\\n"CREATE TABLE input_table (\n  column1 INT,\n  column2 STRING\n);\nCREATE TABLE output_table (\n  column3 INT,\n  column4 STRING\n);\nINSERT INTO TABLE output_table\nSELECT column1, column2\nFROM input_table;"  \\\n-submitUser hadoop -proxyUser hadoop\n')),(0,o.kt)("h3",{id:"24-view-logs"},"2.4 View logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cat /appcom/tmp/hadoop/20230922/hive/946375fe-f189-487c-b3a7-f9fa821edace/logs/stdout \n")),(0,o.kt)("p",null,"The output is as follows:\n",(0,o.kt)("img",{alt:"hive-lineage-log",src:t(29595).Z,width:"1625",height:"215"})),(0,o.kt)("p",null,"Details are as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version":"1.0",\n  "user":"hadoop",\n  "timestamp":1695354104,\n  "duration":15318,\n  "jobIds":[\n    "job_1691375506204_0488"\n  ],\n  "engine":"mr",\n  "database":"default",\n  "hash":"dbb11fce57f10dccb6ef724f66af611c",\n  "queryText":"INSERT INTO TABLE output_table\\nSELECT column1, column2\\nFROM input_table",\n  "edges":[\n    {\n      "sources":[\n        2\n      ],\n      "targets":[\n        0\n      ],\n      "edgeType":"PROJECTION"\n    },\n    {\n      "sources":[\n        3\n      ],\n      "targets":[\n        1\n      ],\n      "edgeType":"PROJECTION"\n    },\n    {\n      "sources":[\n        2\n      ],\n      "targets":[\n        0\n      ],\n      "expression":"compute_stats(default.input_table.column1, \'hll\')",\n      "edgeType":"PROJECTION"\n    },\n    {\n      "sources":[\n        3\n      ],\n      "targets":[\n        1\n      ],\n      "expression":"compute_stats(default.input_table.column2, \'hll\')",\n      "edgeType":"PROJECTION"\n    }\n  ],\n  "vertices":[\n    {\n      "id":0,\n      "vertexType":"COLUMN",\n      "vertexId":"default.output_table.column3"\n    },\n    {\n      "id":1,\n      "vertexType":"COLUMN",\n      "vertexId":"default.output_table.column4"\n    },\n    {\n      "id":2,\n      "vertexType":"COLUMN",\n      "vertexId":"default.input_table.column1"\n    },\n    {\n      "id":3,\n      "vertexType":"COLUMN",\n      "vertexId":"default.input_table.column2"\n    }\n  ]\n}\n')))}u.isMDXComponent=!0},29595:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/hive-lineage-log-0761c08c8e6af726c778b1a0f08d91fd.png"}}]);