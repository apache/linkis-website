"use strict";(self.webpackChunklinkis_web_apache=self.webpackChunklinkis_web_apache||[]).push([[41645],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=i,k=d["".concat(s,".").concat(h)]||d[h]||p[h]||o;return n?a.createElement(k,r(r({ref:t},c),{},{components:n})):a.createElement(k,r({ref:t},c))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var u=2;u<o;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},47581:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(87462),i=(n(67294),n(3905));const o={title:"Token",sidebar_position:2},r=void 0,l={unversionedId:"auth/token",id:"version-1.4.0/auth/token",title:"Token",description:"Usually when the third-party system calls the linkis service, it usually authenticates through token",source:"@site/versioned_docs/version-1.4.0/auth/token.md",sourceDirName:"auth",slug:"/auth/token",permalink:"/docs/latest/auth/token",draft:!1,editUrl:"https://github.com/apache/linkis-website/edit/dev/versioned_docs/version-1.4.0/auth/token.md",tags:[],version:"1.4.0",sidebarPosition:2,frontMatter:{title:"Token",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"LDAP",permalink:"/docs/latest/auth/ldap"},next:{title:"Password-Free",permalink:"/docs/latest/auth/test"}},s={},u=[{value:"1. Implementation logic introduction",id:"1-implementation-logic-introduction",level:2},{value:"2. How to use",id:"2-how-to-use",level:2},{value:"2.1 New Token",id:"21-new-token",level:3},{value:"2.2 Native way",id:"22-native-way",level:3},{value:"Example",id:"example",level:4},{value:"2.3 The client uses token authentication",id:"23-the-client-uses-token-authentication",level:3},{value:"Example",id:"example-1",level:4},{value:"3 Notes",id:"3-notes",level:2},{value:"3.1 token configuration",id:"31-token-configuration",level:3},{value:"3.2 Administrator permission token",id:"32-administrator-permission-token",level:3}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Usually when the third-party system calls the linkis service, it usually authenticates through token")),(0,i.kt)("h2",{id:"1-implementation-logic-introduction"},"1. Implementation logic introduction"),(0,i.kt)("p",null,"Control through unified authentication processing filter: ",(0,i.kt)("inlineCode",{parentName:"p"},"org.apache.linkis.server.security.SecurityFilter")),(0,i.kt)("p",null,"Implemented pseudocode"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'\nval TOKEN_KEY = "Token-Code"\nval TOKEN_USER_KEY = "Token-User"\n\n/* TokenAuthentication.isTokenRequest by judging the request request:\n      1. Whether the request header contains TOKEN_KEY and TOKEN_USER_KEY: getHeaders.containsKey(TOKEN_KEY) && getHeaders.containsKey(TOKEN_USER_KEY)\n      2. Or request whether TOKEN_KEY and TOKEN_USER_KEY are included in the cookies: getCookies.containsKey(TOKEN_KEY) &&getCookies.containsKey(TOKEN_USER_KEY)\n*/\n\nif (TokenAuthentication.isTokenRequest(gatewayContext)) {\n       /* Perform token authentication\n         1. Confirm whether to enable the token authentication configuration item `wds.linkis.gateway.conf.enable.token.auth`\n         2. Extract the token tokenUser host information for authentication and verify the validity\n       */\n       TokenAuthentication. tokenAuth(gatewayContext)\n     } else {\n     //Common username and password authentication\n}\n')),(0,i.kt)("p",null,"Available tokens and corresponding ip-related information data are stored in the table ",(0,i.kt)("inlineCode",{parentName:"p"},"linkis_mg_gateway_auth_token"),",\nsee ","[table analysis description]"," (../development/table/all#16-linkis_mg_gateway_auth_token) for details, non-real-time update,\nPeriodically ",(0,i.kt)("inlineCode",{parentName:"p"},"wds.linkis.token.cache.expire.hour")," (default interval 12 hours) is refreshed into the service memory"),(0,i.kt)("h2",{id:"2-how-to-use"},"2. How to use"),(0,i.kt)("h3",{id:"21-new-token"},"2.1 New Token"),(0,i.kt)("p",null,"Management console ",(0,i.kt)("inlineCode",{parentName:"p"},"Basic Data Management > Token Management")," to add"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Name: token name corresponds to Token-Code, such as: TEST-AUTH\nUser: The username corresponding to the token, that is, the perceived requesting user, will be used for log auditing. If there is no limit, it can be configured as *\nHost: The host that can be accessed will perform the IP verification and filtering of the requester. If there is no limit, it can be configured as *\nValid days: If it is permanently valid, configure it as -1\n")),(0,i.kt)("h3",{id:"22-native-way"},"2.2 Native way"),(0,i.kt)("p",null,"The constructed http request method needs to add ",(0,i.kt)("inlineCode",{parentName:"p"},"Token-Code"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Token-User")," parameters in the request header,"),(0,i.kt)("h4",{id:"example"},"Example"),(0,i.kt)("p",null,"Request address:\n",(0,i.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:9001/api/rest_j/v1/entrance/submit")),(0,i.kt)("p",null,"body parameter:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n     "executionContent": {"code": "sleep 5s;echo pwd", "runType": "shell"},\n     "params": {"variable": {}, "configuration": {}},\n     "source": {"scriptPath": "file:///mnt/bdp/hadoop/1.hql"},\n     "labels": {\n         "engineType": "shell-1",\n         "userCreator": "hadoop-IDE",\n         "executeOnce": "false"\n     }\n}\n')),(0,i.kt)("p",null,"Request header header:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Content-Type: application/json\nToken-Code: BML-AUTH\nToken-User: hadoop\n")),(0,i.kt)("h3",{id:"23-the-client-uses-token-authentication"},"2.3 The client uses token authentication"),(0,i.kt)("p",null,"The client authentication methods provided by linkis all support the Token strategy mode ",(0,i.kt)("inlineCode",{parentName:"p"},"new TokenAuthenticationStrategy()")),(0,i.kt)("p",null,"For details, please refer to ",(0,i.kt)("a",{parentName:"p",href:"../user-guide/sdk-manual"},"SDK method")),(0,i.kt)("h4",{id:"example-1"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// 1. build config: linkis gateway url\n  DWSClientConfig clientConfig = ((DWSClientConfigBuilder) (DWSClientConfigBuilder.newBuilder()\n         .addServerUrl("http://127.0.0.1:9001/") //set linkis-mg-gateway url: http://{ip}:{port}\n         .connectionTimeout(30000) //connectionTimeOut\n         .discoveryEnabled(false) //disable discovery\n         .discoveryFrequency(1, TimeUnit.MINUTES) // discovery frequency\n         .loadbalancerEnabled(true) // enable loadbalance\n         .maxConnectionSize(5) // set max Connection\n         .retryEnabled(false) // set retry\n         .readTimeout(30000) //set read timeout\n         .setAuthenticationStrategy(new TokenAuthenticationStrategy()) // AuthenticationStrategy Linkis auth Token\n         .setAuthTokenKey("Token-Code") // set token key\n         .setAuthTokenValue("DSM-AUTH") // set token value\n         .setDWSVersion("v1") //linkis rest version v1\n         .build();\n')),(0,i.kt)("h2",{id:"3-notes"},"3 Notes"),(0,i.kt)("h3",{id:"31-token-configuration"},"3.1 token configuration"),(0,i.kt)("p",null,"Supported tokens, the corresponding available users/applicable requester ip are controlled by the table ",(0,i.kt)("inlineCode",{parentName:"p"},"linkis_mg_gateway_auth_token"),",\nthe loading is not updated in real time, and the caching mechanism is used"),(0,i.kt)("h3",{id:"32-administrator-permission-token"},"3.2 Administrator permission token"),(0,i.kt)("p",null,"For the restriction of high-risk operations, the token of the administrator role is required to operate,\nand the format of the administrator token is ",(0,i.kt)("inlineCode",{parentName:"p"},"admin-xxx")))}p.isMDXComponent=!0}}]);